#!perl

use warnings;
use strict;
use BitBack;

INIT {
    main();
}

use constant {
    EXIT_SUCCESS => 0,
    EXIT_ERROR   => 1,
};

sub main {
    my $options = parse_cmdline_options( \@ARGV );

    my $model = BitBack->new($options);
    my $gui;

    # Gtk GUI
    if ( $options->{gui} ) {
        require BitBack::GUI::Gtk;
        $gui = BitBack::GUI::Gtk->new($model);
    }

    # Cmd Line
    elsif ( $options->{profile} ) {
        require BitBack::GUI::CmdLine;
        $gui = BitBack::GUI::CmdLine->new($model);
    }

    # Error
    else {
        print_help();
    }

    $gui->start( $options->{profile} );
}

sub parse_cmdline_options {
    my $cmdline = shift;

    # default options
    my $options = {
        gui    => 1,
        config => "$ENV{HOME}/.bitback",
    };

    for ( my $index = 0 ; $index < scalar(@$cmdline) ; $index++ ) {
        my $current_opt = $cmdline->[$index];

        # Config
        if ( $current_opt eq '--config' ) {
            $options->{config} = $cmdline->[ ++$index ];
        }

        # GUI
        elsif ( $current_opt eq '-nox' ) {
            $options->{gui} = 0;
        }

        # Help
        elsif ( $current_opt eq '-help' ) {
            print_help();
        }

        # Profile
        elsif ( $current_opt eq '--profile' ) {
            $options->{profile} = $cmdline->[ ++$index ];
        }

        # Invalid options
        else {
            print STDERR "FATAL: Invalid option $current_opt\n";
            print_help();
        }
    }

    return $options;
}

sub print_help {
    my $exe = __FILE__;
    print STDERR <<HELP;
Usage: $exe [--config FILE ] [-nox] [-help] [--profile NAME]
  --config FILE            Specifies the config file to be used
                           (default value is ~/.bitback)

  -help                    Prints help information

  -nox                     Runs in command line mode

  --profile NAME           Starts bitback and runs the selected profile

HELP
    exit(EXIT_ERROR);
}

# Local Variables:
#   mode: cperl
# End:
